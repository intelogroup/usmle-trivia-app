import{D as e,E as t,F as r,j as s,w as a,W as o}from"./vendor-react-BiMcuLH7.js";import{s as n,q as i}from"./index-DH4Rn4SV.js";import{Q as c}from"./questionService-ObTb5fh1.js";import{u as l}from"./vendor-Dcu_KtFL.js";class u{static async fetchQuestions(e,t=10,r=null){try{let s=n.from("questions");s="mixed"!==e?s.select("\n            id,\n            question_text,\n            options,\n            correct_option_id,\n            explanation,\n            difficulty,\n            created_at,\n            question_tags!inner(\n              tag_id,\n              tags(name)\n            )\n          ").eq("question_tags.tag_id",e):s.select("\n            id,\n            question_text,\n            options,\n            correct_option_id,\n            explanation,\n            difficulty,\n            created_at,\n            question_tags(\n              tag_id,\n              tags(name)\n            )\n          "),r&&(s=s.eq("difficulty",r));const{data:a,error:o}=await s.limit(2*t);if(o)throw console.error("Supabase error fetching questions:",o),o;if(!a||0===a.length)throw new Error("No questions found for this category");return a.sort(()=>Math.random()-.5).slice(0,t)}catch(s){throw console.error("Error fetching questions:",s),s}}static async recordQuizResponsesBatch(e){try{const{error:t}=await n.from("quiz_responses").insert(e);if(t)throw console.error("Error recording quiz responses batch:",t),t}catch(t){throw console.error("Error recording quiz responses batch:",t),t}}static async updateUserQuestionHistoryBatch(e){try{const{error:t}=await n.from("user_question_history").upsert(e,{onConflict:"user_id,question_id"});if(t)throw console.error("Error updating user question history batch:",t),t}catch(t){throw console.error("Error updating user question history batch:",t),t}}static async fetchCategories(){try{const{data:e,error:t}=await n.from("tag_question_counts").select("\n          id,\n          name,\n          icon_name,\n          color_code,\n          question_count\n        ").eq("is_active",!0).order("order_index",{ascending:!0}).limit(50);if(t)throw console.error("Error fetching categories:",t),t;return e||[]}catch(e){throw console.error("Error fetching categories:",e),e}}static async prefetchCategoriesQuestions(e,t=15){try{const r=e.map(e=>this.fetchQuestions(e,t));return(await Promise.allSettled(r)).reduce((t,r,s)=>("fulfilled"===r.status&&(t[e[s]]=r.value),t),{})}catch(r){return console.error("Error prefetching category questions:",r),{}}}static async getUserStats(e){try{const{data:t,error:r}=await n.rpc("get_user_quiz_stats",{user_id:e});if(r)throw console.error("Error fetching user stats:",r),r;return t?.[0]||{total_questions:0,correct_answers:0,accuracy:0,quizzes_completed:0}}catch(t){throw console.error("Error fetching user stats:",t),t}}static async getLeaderboard(e=10){try{const{data:t,error:r}=await n.rpc("get_leaderboard",{result_limit:e});if(r)throw console.error("Error fetching leaderboard:",r),r;return t||[]}catch(t){throw console.error("Error fetching leaderboard:",t),t}}static async healthCheck(){try{const{data:e,error:t}=await n.from("questions").select("id").limit(1);return!t}catch(e){return console.error("Health check failed:",e),!1}}}const d="usmle_quiz_cache_",g=(e,t)=>{try{const r={data:t,timestamp:Date.now(),expiry:Date.now()+864e5};localStorage.setItem(d+e,JSON.stringify(r))}catch(r){console.warn("Failed to cache data locally:",r)}},h=e=>{try{const t=localStorage.getItem(d+e);if(!t)return null;const r=JSON.parse(t);return Date.now()>r.expiry?(localStorage.removeItem(d+e),null):r.data}catch(t){return console.warn("Failed to retrieve cached data:",t),null}},m=e=>{try{Object.keys(localStorage).forEach(t=>{t.startsWith(d+(e||""))&&localStorage.removeItem(t)})}catch(t){console.warn("Failed to clear cache:",t)}};function f(e,r=10,s=null,a={}){const o=`questions_${e}_${r}_${s}`;return t({queryKey:i.questionsByCategory(e,r,s),queryFn:async()=>{const t=await u.fetchQuestions(e,r,s);return g(o,t),t},initialData:()=>{const e=h(o);if(e)return console.info("Using initialData from cache for",o),e},initialDataUpdatedAt:()=>h(o)?.timestamp,staleTime:3e5,gcTime:18e5,refetchOnWindowFocus:!1,...a})}function y(){const t=e();return r({mutationFn:({userId:e,categoryId:t,questionCount:r})=>c.createQuizSession(e,t,r),onSuccess:(e,r)=>{t.setQueryData(i.quizSessions(r.userId),t=>[...t||[],e])}})}function p(){const t=e();return r({mutationFn:({sessionId:e,userId:t,finalScore:r})=>c.completeQuizSession(e,t,r),onSuccess:(e,r)=>{t.invalidateQueries({queryKey:i.userStats(r.userId)}),t.invalidateQueries({queryKey:i.userProgress(r.userId)})}})}function x(){return r({mutationFn:e=>u.recordQuizResponsesBatch(e)})}function b(){return r({mutationFn:e=>u.updateUserQuestionHistoryBatch(e)})}function _(){const t=e();return{clearCache:e=>{m(e),e?t.removeQueries({queryKey:[e]}):t.clear()},getCacheSize:()=>{try{let e=0;for(let t in localStorage)t.startsWith(d)&&(e+=localStorage[t].length);return e}catch{return 0}},getOfflineData:(e,t)=>h(`questions_${e}_${t}`)}}const q=({progressPercentage:e})=>s.jsx("div",{className:"w-full bg-gray-200 rounded-full h-2 mb-3 dark:bg-gray-700",children:s.jsx("div",{className:"bg-purple-600 h-2 rounded-full",style:{width:`${e}%`}})}),w=({currentQuestion:e,selectedOption:t,isAnswered:r,handleOptionSelect:a,showExplanations:o=!0})=>s.jsxs(l.div,{initial:{opacity:0,x:100},animate:{opacity:1,x:0},exit:{opacity:0,x:-100},transition:{duration:.5},className:"bg-white dark:bg-gray-800 p-4 rounded-xl shadow-md",children:[s.jsx("h2",{className:"text-lg font-semibold mb-3",children:e.question_text}),s.jsx("div",{className:"flex flex-wrap gap-1 mb-3",children:e.question_tags.map(e=>s.jsx("span",{className:"bg-blue-100 text-blue-800 text-xs font-medium px-2 py-0.5 rounded-full dark:bg-blue-900 dark:text-blue-300",children:e.tags.name},e.tag_id))}),s.jsx("div",{className:"space-y-2",children:e.options&&e.options.map(o=>s.jsx("button",{onClick:()=>a(o.id),disabled:r,className:`w-full text-left p-3 rounded-lg border-2 transition-all\n              ${t===o.id?"border-blue-500 bg-blue-100 dark:bg-blue-900":"border-gray-300 dark:border-gray-600"}\n              ${r&&o.id===e.correct_option_id?"bg-green-200 dark:bg-green-800 border-green-500":""}\n              ${r&&t===o.id&&o.id!==e.correct_option_id?"bg-red-200 dark:bg-red-800 border-red-500":""}\n              ${r?"cursor-not-allowed":"hover:bg-gray-100 dark:hover:bg-gray-700"}`,children:o.text},o.id))}),r&&o&&e.explanation&&s.jsxs(l.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},className:"mt-3 p-3 rounded-lg bg-gray-100 dark:bg-gray-700",children:[s.jsx("h3",{className:"font-bold mb-2 text-sm",children:"Explanation"}),s.jsx("p",{className:"text-sm",children:e.explanation})]})]},e.id),j=({isFetching:e})=>s.jsxs("div",{className:"flex flex-col justify-center items-center h-screen",children:[s.jsx("div",{className:"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mb-4"}),s.jsx("p",{className:"text-gray-600",children:"Loading quiz questions..."}),e&&s.jsxs("p",{className:"text-sm text-gray-500",children:["Fetching latest questions ",s.jsx(a,{size:16,className:"inline-block animate-pulse"})]})]}),N=({questionsError:e,categoryId:t,questionCount:r,getOfflineData:a,navigate:n})=>{const i=a(t,r);return s.jsxs("div",{className:"flex flex-col items-center justify-center h-screen",children:[s.jsx(o,{className:"h-12 w-12 text-red-500 mb-4"}),s.jsx("p",{className:"text-lg text-red-600 mb-4",children:i?"Network error, but offline questions available":"Error loading quiz questions"}),s.jsx("p",{className:"text-sm text-gray-500 mb-4",children:e?.message}),i?s.jsx("button",{onClick:()=>window.location.reload(),className:"bg-blue-600 text-white px-6 py-2 rounded-lg mb-2",children:"Use Offline Questions"}):null,s.jsx("button",{onClick:()=>n("/categories"),className:"bg-gray-600 text-white px-6 py-2 rounded-lg",children:"Back to Categories"})]})};export{j as Q,f as a,y as b,x as c,b as d,p as e,N as f,q as g,w as h,_ as u};
